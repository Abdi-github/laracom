volumes:
  db-store:
  psysh-store:
  pma-session-store:
  redis-store:

configs:
  db-config:
    file: ./docker/mysql/my.cnf
  redis-config:
    file: ./docker/redis/redis.cnf

services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      target: ${APP_BUILD_TARGET:-deploy}
    volumes:
      - type: bind
        source: ./src
        target: /var/www
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    environment:
      - APP_DEBUG=${APP_DEBUG}
      - APP_ENV=${APP_ENV}
      - APP_URL=${APP_URL}
      - LOG_CHANNEL=${LOG_CHANNEL:-stderr}
      - LOG_STDERR_FORMATTER=${LOG_STDERR_FORMATTER:-Monolog\Formatter\JsonFormatter}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-8080}
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./src
        target: /var/www

  db:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: 3310
        protocol: tcp
        mode: host
    configs:
      - source: db-config
        target: /etc/my.cnf
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}

  pma:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=${DB_HOST}
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    ports:
      - 8088:80
    volumes:
      - pma-session-store:/sessions
  redis:
    image: redis:6.2-alpine
    configs:
      - source: redis-config
        target: /etc/redis.cnf
    volumes:
      - type: volume
        source: redis-store
        target: /data
        volume:
          nocopy: true
    ports:
      - "6379:6379"

  mailpit:
    image: axllent/mailpit
    ports:
      - target: 8025
        published: ${MAILPIT_PUBLISHED_PORT:-8025}
        protocol: tcp
        mode: host
